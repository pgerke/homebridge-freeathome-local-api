name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
        include:
          - npm-version: latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install latest npm
        run: npm install -g npm@${{ matrix.npm-version }} && npm --version
      - name: Install dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
        env:
          CI: true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist
          retention-days: 5

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
        include:
          - npm-version: latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install latest npm
        run: npm install -g npm@${{ matrix.npm-version }} && npm --version
      - name: Restore dependencies
        run: npm ci
      - name: Patch homebridge package
        run: node patch-homebridge-exports.mjs
      - name: Run linter
        run: npm run lint

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore dependencies
        run: npm ci
      - name: Run audit
        run: npm audit --omit=dev

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
        include:
          - npm-version: latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install latest npm
        run: npm install -g npm@${{ matrix.npm-version }} && npm --version
      - name: Restore dependencies
        run: npm ci
      - name: Patch homebridge package
        run: node patch-homebridge-exports.mjs
      - name: Run unit test
        run: npm run test:ci
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Node ${{ matrix.node-version }}
          path: coverage
          retention-days: 1
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: pgerke/homebridge-freeathome-local-api

  analysis:
    name: Analyse
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Coverage Node 22
          path: "./coverage/"
      - name: Extract version
        id: version-extraction
        run: echo "APP_VERSION=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.version-extraction.outputs.APP_VERSION }}
