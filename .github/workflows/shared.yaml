on:
  - workflow_call

jobs:
  cache_dependencies:
    name: Cache dependencies
    runs-on: ubuntu-latest
    outputs:
      pnpm-store-path: ${{ steps.pnpm-store-path.outputs.store-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store path
        id: pnpm-store-path
        run: echo "store-path=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store-path.outputs.store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: cache_dependencies
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Build the project
        run: pnpm run build
        env:
          CI: true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist
          retention-days: 5

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: cache_dependencies
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Patch homebridge package
        run: node patch-homebridge-exports.mjs
      - name: Run linter
        run: pnpm run lint

  audit:
    name: Audit
    runs-on: ubuntu-latest
    needs: cache_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Run audit
        run: pnpm audit --prod

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: cache_dependencies
    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [18, 20, 22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ needs.cache_dependencies.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Patch homebridge package
        run: node patch-homebridge-exports.mjs
      - name: Run unit test
        run: pnpm run test:ci
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Node ${{ matrix.node-version }}
          path: coverage
          retention-days: 1
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: pgerke/homebridge-freeathome-local-api

  analysis:
    name: Analyse
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Coverage Node 22
          path: "./coverage/"
      - name: Extract version
        id: version-extraction
        run: echo "APP_VERSION=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.version-extraction.outputs.APP_VERSION }}
